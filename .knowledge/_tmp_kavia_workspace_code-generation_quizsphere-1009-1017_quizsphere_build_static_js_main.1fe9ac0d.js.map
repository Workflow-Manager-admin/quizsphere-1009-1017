{"is_source_file": false, "format": "", "description": "", "external_files": ["/tmp/kavia/workspace/code-generation/quizsphere-1009-1017/quizsphere/build/static/js/main.1fe9ac0d.js"], "external_methods": ["formatProdErrorMessage", "checkIfContextChanged", "propagateParentContextChanges", "createUpdate", "enqueueUpdate", "scheduleUpdateOnFiber", "entangleTransitions", "attachPingListener", "logUncaughtError", "logCaughtError", "queueHydrationError", "createCapturedValueAtFiber", "enqueueCapturedUpdate", "createRootErrorUpdate", "createClassErrorUpdate", "initializeClassErrorUpdate", "throwException", "reconcileChildren", "updateForwardRef", "updateMemoComponent", "updateSimpleMemoComponent", "updateOffscreenComponent", "pushMaterializedTreeId", "pushTransition", "deferHiddenOffscreenComponent", "checkScheduledUpdateOrContext", "mountWorkInProgressHook", "updateWorkInProgressHook", "useState", "useReducer", "useMemo", "useCallback", "useRef", "useEffect", "useLayoutEffect", "useInsertionEffect", "useImperativeHandle", "useDebugValue", "useDeferredValue", "useTransition", "useSyncExternalStore", "useId", "readContext", "mountEffect", "updateEffect", "mountDeferredValueImpl", "updateDeferredValueImpl", "startTransition", "startHostTransition", "ensureFormComponentIsStateful", "requestFormReset", "useHostTransitionStatus", "updateId", "updateRefresh", "refreshCache", "dispatchReducerAction", "dispatchSetState", "dispatchSetStateInternal", "dispatchOptimisticSetState", "isRenderPhaseUpdate", "enqueueRenderPhaseUpdate", "entangleTransitionUpdate", "applyDerivedStateFromProps", "checkShouldComponentUpdate", "callComponentWillReceiveProps", "resolveClassComponentProps", "reportGlobalError", "defaultOnUncaughtError", "defaultOnCaughtError", "defaultOnRecoverableError", "ownerDocument", "ownerWindow", "getScrollbarSize", "ariaHidden", "getPaddingRight", "isAriaHiddenForbiddenOnElement", "ariaHiddenSiblings", "findIndexOf", "handleContainer", "getHiddenSiblings", "ModalManager", "setRef", "getContainer", "reflow", "getTransitionProps", "generateUtilityClasses", "generateUtilityClass", "getStepUtilityClass", "getStepIconUtilityClass", "getStepLabelUtilityClass", "getDialogUtilityClass", "getDialogTitleUtilityClass", "getDialogContentUtilityClass", "getDialogContentTextUtilityClass", "getDialogActionsUtilityClass"], "published": ["React Router core logic", "route context", "React hooks for routing", "route creation from JSX", "error boundary components", "lazy loading routes", "nested routes", "suspense loading", "route context management", "React internal API", "React reconciler", "React Fiber algorithms", "effect handling", "React DOM internal functions", "createRoot", "hydrateRoot", "effect lifecycle", "resource management", "concurrent rendering", "hydration", "effect processing", "effect scheduling", "React context", "React hooks implementations"], "classes": [{"name": "MeasurementLayoutComponent", "description": "React component that manages layout measurement, context registration, and cleanup for layout-related features in React Router."}, {"name": "ProjectionNode", "description": "Core class representing a projection node in React Router's internal layout system, handling measurement, layout updates, and animation coordination."}, {"name": "NodeStack", "description": "Utility class managing a stack of nodes with depth ordering related to rendering or layout."}], "methods": [{"name": "addEventListener", "description": "Registers an event listener for the projection node."}, {"name": "notifyListeners", "description": "Triggers all registered listeners for a given event."}, {"name": "mount", "description": "Initializes and mounts a visual element into the projection tree."}, {"name": "unmount", "description": "Cleans up and unmounts the projection node, removing event listeners and references."}, {"name": "willUpdate", "description": "Prepares the projection node for an update, recalculating layout and scheduling animations."}, {"name": "update", "description": "Performs layout measurement, updates projection matrices, and manages animations during a render cycle."}], "calls": ["formatProdErrorMessage", "checkIfContextChanged", "propagateParentContextChanges", "createUpdate", "enqueueUpdate", "scheduleUpdateOnFiber", "entangleTransitions", "attachPingListener", "logUncaughtError", "logCaughtError", "queueHydrationError", "createCapturedValueAtFiber", "enqueueCapturedUpdate", "createRootErrorUpdate", "createClassErrorUpdate", "initializeClassErrorUpdate", "throwException", "reconcileChildren", "updateForwardRef", "updateMemoComponent", "updateSimpleMemoComponent", "updateOffscreenComponent", "pushMaterializedTreeId", "pushTransition", "deferHiddenOffscreenComponent", "checkScheduledUpdateOrContext", "mountWorkInProgressHook", "updateWorkInProgressHook", "useState", "useReducer", "useMemo", "useCallback", "useRef", "useEffect", "useLayoutEffect", "useInsertionEffect", "useImperativeHandle", "useDebugValue", "useDeferredValue", "useTransition", "useSyncExternalStore", "useId", "readContext", "mountEffect", "updateEffect", "mountDeferredValueImpl", "updateDeferredValueImpl", "startTransition", "startHostTransition", "ensureFormComponentIsStateful", "requestFormReset", "useHostTransitionStatus", "updateId", "updateRefresh", "refreshCache", "dispatchReducerAction", "dispatchSetState", "dispatchSetStateInternal", "dispatchOptimisticSetState", "isRenderPhaseUpdate", "enqueueRenderPhaseUpdate", "entangleTransitionUpdate", "applyDerivedStateFromProps", "checkShouldComponentUpdate", "callComponentWillReceiveProps", "resolveClassComponentProps", "reportGlobalError", "defaultOnUncaughtError", "defaultOnCaughtError", "defaultOnRecoverableError", "addPointerEvent", "cancelFrame", "frame.postRender", "microtask.postRender", "getTransformPagePoint", "updateScroll", "updateLayout", "measurePageBox", "calcViewportConstraints", "rebaseAxisConstraints", "finishAnimation", "cancelTreeOptimisedTransformAnimations", "createProjectionNode", "resolveTargetDelta", "propagateDirtyNodes", "cleanDirtyNodes", "addUniqueItem", "removeItem", "mixNumber", "percent.test", "px.test"], "search-terms": ["build/static/js", "main.1fe9ac0d.js.map", "source map", "source map JavaScript", "JavaScript source map", "minified code mappings", "debugging", "build artifacts", "React Fiber", "effect handling", "React reconciliation", "DOM property setting", "event system", "Suspense", "resource management", "React internal API", "React reconciler", "React Fiber algorithms", "React DOM internal functions", "createRoot", "hydrateRoot", "effect lifecycle", "concurrent rendering", "hydration", "effect processing", "effect scheduling", "React context", "React hooks implementations", "React Router core logic", "route context", "React hooks for routing", "route creation from JSX", "error boundary components", "lazy loading routes", "nested routes", "suspense loading", "route context management", "React Router routing", "projection node", "layout measurement", "layout animation", "projection system", "layout group", "scale correction", "scale-border-radius", "scale-box-shadow", "measure layout", "projection tree", "layout context", "node management", "layout updates", "animation coordination"], "state": 2, "file_id": 66, "knowledge_revision": 175, "git_revision": "", "filename": "/tmp/kavia/workspace/code-generation/quizsphere-1009-1017/quizsphere/build/static/js/main.1fe9ac0d.js.map", "hash": null, "format-version": 4, "code-base-name": "default", "revision_history": [{"175": ""}]}